{"ast":null,"code":"var __jsx = React.createElement;\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Drawer, Layout } from \"antd\";\nimport SidebarContent from \"./SidebarContent\";\nimport { toggleCollapsedSideNav } from \"../../../redux/actions\";\nimport { NAV_STYLE_DRAWER, NAV_STYLE_FIXED, NAV_STYLE_MINI_SIDEBAR, NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR, NAV_STYLE_NO_HEADER_MINI_SIDEBAR, TAB_SIZE, THEME_TYPE_LITE } from \"../../../constants/ThemeSetting\";\nconst {\n  Sider\n} = Layout;\nconst Sidebar = () => {\n  const themeType = useSelector(({\n    settings\n  }) => settings.themeType);\n  const navCollapsed = useSelector(({\n    settings\n  }) => settings.navCollapsed);\n  const width = useSelector(({\n    settings\n  }) => settings.width);\n  const navStyle = useSelector(({\n    settings\n  }) => settings.navStyle);\n  const dispatch = useDispatch();\n  const onToggleCollapsedNav = () => {\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\n  };\n  let drawerStyle = \"gx-collapsed-sidebar\";\n  if (navStyle === NAV_STYLE_FIXED) {\n    drawerStyle = \"\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n    drawerStyle = \"gx-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar\";\n  } else if (navStyle === NAV_STYLE_DRAWER) {\n    drawerStyle = \"gx-collapsed-sidebar\";\n  }\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\n    drawerStyle = \"gx-collapsed-sidebar\";\n  }\n  return __jsx(Sider, {\n    className: `gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`,\n    trigger: null,\n    collapsed: width < TAB_SIZE ? false : navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n    theme: themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\",\n    collapsible: true\n  }, navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ? __jsx(Drawer, {\n    className: `gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`,\n    placement: \"left\",\n    closable: false,\n    onClose: onToggleCollapsedNav,\n    visible: navCollapsed\n  }, __jsx(SidebarContent, null)) : __jsx(SidebarContent, null));\n};\nexport default Sidebar;","map":{"version":3,"names":["React","useDispatch","useSelector","Drawer","Layout","SidebarContent","toggleCollapsedSideNav","NAV_STYLE_DRAWER","NAV_STYLE_FIXED","NAV_STYLE_MINI_SIDEBAR","NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR","NAV_STYLE_NO_HEADER_MINI_SIDEBAR","TAB_SIZE","THEME_TYPE_LITE","Sider","Sidebar","themeType","settings","navCollapsed","width","navStyle","dispatch","onToggleCollapsedNav","drawerStyle"],"sources":["E:/work/aglius/lighthouse/app/core/Sidebar/index.js"],"sourcesContent":["import React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Drawer, Layout} from \"antd\";\n\nimport SidebarContent from \"./SidebarContent\";\nimport {toggleCollapsedSideNav} from \"../../../redux/actions\";\nimport {\n  NAV_STYLE_DRAWER,\n  NAV_STYLE_FIXED,\n  NAV_STYLE_MINI_SIDEBAR,\n  NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR,\n  NAV_STYLE_NO_HEADER_MINI_SIDEBAR,\n  TAB_SIZE,\n  THEME_TYPE_LITE\n} from \"../../../constants/ThemeSetting\";\n\nconst {Sider} = Layout;\n\nconst Sidebar = () => {\n  const themeType = useSelector(({settings}) => settings.themeType);\n  const navCollapsed = useSelector(({settings}) => settings.navCollapsed);\n  const width = useSelector(({settings}) => settings.width);\n  const navStyle = useSelector(({settings}) => settings.navStyle);\n\n  const dispatch = useDispatch();\n\n  const onToggleCollapsedNav = () => {\n    dispatch(toggleCollapsedSideNav(!navCollapsed));\n  };\n\n  let drawerStyle = \"gx-collapsed-sidebar\";\n\n  if (navStyle === NAV_STYLE_FIXED) {\n    drawerStyle = \"\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar gx-mini-custom-sidebar\";\n  } else if (navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) {\n    drawerStyle = \"gx-custom-sidebar\"\n  } else if (navStyle === NAV_STYLE_MINI_SIDEBAR) {\n    drawerStyle = \"gx-mini-sidebar\";\n  } else if (navStyle === NAV_STYLE_DRAWER) {\n    drawerStyle = \"gx-collapsed-sidebar\"\n  }\n  if ((navStyle === NAV_STYLE_FIXED || navStyle === NAV_STYLE_MINI_SIDEBAR\n    || navStyle === NAV_STYLE_NO_HEADER_EXPANDED_SIDEBAR) && width < TAB_SIZE) {\n    drawerStyle = \"gx-collapsed-sidebar\"\n  }\n\n  return (\n    <Sider\n      className={`gx-app-sidebar ${drawerStyle} ${themeType !== THEME_TYPE_LITE ? 'gx-layout-sider-dark' : null}`}\n      trigger={null}\n      collapsed={(width < TAB_SIZE ? false : navStyle === NAV_STYLE_MINI_SIDEBAR || navStyle === NAV_STYLE_NO_HEADER_MINI_SIDEBAR)}\n      theme={themeType === THEME_TYPE_LITE ? \"lite\" : \"dark\"}\n      collapsible>\n      {\n        navStyle === NAV_STYLE_DRAWER || width < TAB_SIZE ?\n          <Drawer\n            className={`gx-drawer-sidebar ${themeType !== THEME_TYPE_LITE ? 'gx-drawer-sidebar-dark' : null}`}\n            placement=\"left\"\n            closable={false}\n            onClose={onToggleCollapsedNav}\n            visible={navCollapsed}>\n            <SidebarContent/>\n          </Drawer> :\n          <SidebarContent/>\n      }\n    </Sider>\n  )\n};\nexport default Sidebar;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAAQC,MAAM,EAAEC,MAAM,QAAO,MAAM;AAEnC,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,SAAQC,sBAAsB,QAAO,wBAAwB;AAC7D,SACEC,gBAAgB,EAChBC,eAAe,EACfC,sBAAsB,EACtBC,oCAAoC,EACpCC,gCAAgC,EAChCC,QAAQ,EACRC,eAAe,QACV,iCAAiC;AAExC,MAAM;EAACC;AAAK,CAAC,GAAGV,MAAM;AAEtB,MAAMW,OAAO,GAAG,MAAM;EACpB,MAAMC,SAAS,GAAGd,WAAW,CAAC,CAAC;IAACe;EAAQ,CAAC,KAAKA,QAAQ,CAACD,SAAS,CAAC;EACjE,MAAME,YAAY,GAAGhB,WAAW,CAAC,CAAC;IAACe;EAAQ,CAAC,KAAKA,QAAQ,CAACC,YAAY,CAAC;EACvE,MAAMC,KAAK,GAAGjB,WAAW,CAAC,CAAC;IAACe;EAAQ,CAAC,KAAKA,QAAQ,CAACE,KAAK,CAAC;EACzD,MAAMC,QAAQ,GAAGlB,WAAW,CAAC,CAAC;IAACe;EAAQ,CAAC,KAAKA,QAAQ,CAACG,QAAQ,CAAC;EAE/D,MAAMC,QAAQ,GAAGpB,WAAW,EAAE;EAE9B,MAAMqB,oBAAoB,GAAG,MAAM;IACjCD,QAAQ,CAACf,sBAAsB,CAAC,CAACY,YAAY,CAAC,CAAC;EACjD,CAAC;EAED,IAAIK,WAAW,GAAG,sBAAsB;EAExC,IAAIH,QAAQ,KAAKZ,eAAe,EAAE;IAChCe,WAAW,GAAG,EAAE;EAClB,CAAC,MAAM,IAAIH,QAAQ,KAAKT,gCAAgC,EAAE;IACxDY,WAAW,GAAG,wCAAwC;EACxD,CAAC,MAAM,IAAIH,QAAQ,KAAKV,oCAAoC,EAAE;IAC5Da,WAAW,GAAG,mBAAmB;EACnC,CAAC,MAAM,IAAIH,QAAQ,KAAKX,sBAAsB,EAAE;IAC9Cc,WAAW,GAAG,iBAAiB;EACjC,CAAC,MAAM,IAAIH,QAAQ,KAAKb,gBAAgB,EAAE;IACxCgB,WAAW,GAAG,sBAAsB;EACtC;EACA,IAAI,CAACH,QAAQ,KAAKZ,eAAe,IAAIY,QAAQ,KAAKX,sBAAsB,IACnEW,QAAQ,KAAKV,oCAAoC,KAAKS,KAAK,GAAGP,QAAQ,EAAE;IAC3EW,WAAW,GAAG,sBAAsB;EACtC;EAEA,OACE,MAAC,KAAK;IACJ,SAAS,EAAG,kBAAiBA,WAAY,IAAGP,SAAS,KAAKH,eAAe,GAAG,sBAAsB,GAAG,IAAK,EAAE;IAC5G,OAAO,EAAE,IAAK;IACd,SAAS,EAAGM,KAAK,GAAGP,QAAQ,GAAG,KAAK,GAAGQ,QAAQ,KAAKX,sBAAsB,IAAIW,QAAQ,KAAKT,gCAAkC;IAC7H,KAAK,EAAEK,SAAS,KAAKH,eAAe,GAAG,MAAM,GAAG,MAAO;IACvD,WAAW;EAAA,GAETO,QAAQ,KAAKb,gBAAgB,IAAIY,KAAK,GAAGP,QAAQ,GAC/C,MAAC,MAAM;IACL,SAAS,EAAG,qBAAoBI,SAAS,KAAKH,eAAe,GAAG,wBAAwB,GAAG,IAAK,EAAE;IAClG,SAAS,EAAC,MAAM;IAChB,QAAQ,EAAE,KAAM;IAChB,OAAO,EAAES,oBAAqB;IAC9B,OAAO,EAAEJ;EAAa,GACtB,MAAC,cAAc,OAAE,CACV,GACT,MAAC,cAAc,OAAE,CAEf;AAEZ,CAAC;AACD,eAAeH,OAAO"},"metadata":{},"sourceType":"module"}