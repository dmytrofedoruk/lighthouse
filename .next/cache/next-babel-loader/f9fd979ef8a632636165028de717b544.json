{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { ConfigProvider } from 'antd';\nimport { IntlProvider } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport AppLocale from \"../../../lngProvider\";\nvar LocaleProvider = function LocaleProvider(props) {\n  var locale = useSelector(function (_ref) {\n    var settings = _ref.settings;\n    return settings.locale;\n  });\n  var isDirectionRTL = useSelector(function (_ref2) {\n    var settings = _ref2.settings;\n    return settings.isDirectionRTL;\n  });\n  var currentAppLocale = AppLocale[locale.locale];\n  useEffect(function () {\n    if (locale) document.documentElement.lang = locale.locale;\n  }, [locale]);\n  useEffect(function () {\n    if (isDirectionRTL) {\n      document.documentElement.classList.add('rtl');\n      document.documentElement.setAttribute('data-direction', 'rtl');\n    } else {\n      document.documentElement.classList.remove('rtl');\n      document.documentElement.setAttribute('data-direction', 'ltr');\n    }\n  }, [isDirectionRTL]);\n  return __jsx(ConfigProvider, {\n    locale: currentAppLocale.antd,\n    direction: isDirectionRTL ? 'rtl' : 'ltr'\n  }, __jsx(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages\n  }, props.children));\n};\nexport default LocaleProvider;","map":null,"metadata":{},"sourceType":"module"}